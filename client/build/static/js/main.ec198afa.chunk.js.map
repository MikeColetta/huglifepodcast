{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/SearchForm/index.js","components/ResultsContainer/index.js","utils/API.js","pages/Search.js","components/SavedBooks/index.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Jumbotron","SearchForm","props","value","search","onChange","handleInputChange","name","id","placeholder","onClick","handleFormSubmit","ResultsContainer","books","savedBooks","saveBook","length","map","result","index","key","_id","alt","title","src","image","authors","description","href","link","target","rel","data-index","book","includes","style","textAlign","query","axios","get","bookInfo","post","delete","Search","state","createBook","bookData","volumeInfo","join","undefined","imageLinks","thumbnail","previewLink","event","getAttribute","currentBook","API","then","componentDidMount","catch","err","console","error","searchBook","res","setState","data","items","preventDefault","this","getSavedBooks","React","Component","SavedBooks","deleteBook","Saved","App","basename","process","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ec198afa.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport React from \"react\";\r\nimport './style.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n<nav className=\"navbar navbar-dark sticky-top navbar-expand-md customNavbar\">\r\n<div className=\"container-fluid\">\r\n    <Link to=\"/\" className=\"navbar-brand\">\r\n        <h1 className=\"navbar-name\">Google Books</h1>\r\n    </Link>\r\n    <button className=\"navbar-toggler dropdownButton\" type=\"button\" data-toggle=\"collapse\" data-target=\"#portfolio-navbar\"\r\n        aria-controls=\"portfolio-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon dropdownIcon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"dropdown-item\">\r\n                <Link to=\"/search\" className=\"navlink customNavLink\">Search</Link>\r\n            </li>\r\n            <li className=\"dropdown-item\">\r\n                <Link to=\"/saved\" className=\"navlink customNavLink\">Saved</Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport './style.css'\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"jumbotron customJumbotron\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <h1>(React) Google Books Search</h1>\r\n                    <h3>Search for and Save Books of Interest</h3>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport './style.css'\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <div className=\"container card mb-3 customCard\">\r\n            <div className=\"mt-2 mb-2\">\r\n                <h5 className=\"mt-1 bookHeading\">Book Search</h5>\r\n                <form className=\"form-inline\">\r\n                    <p className=\"bookHeading\">Book</p>\r\n                    <input\r\n                        value={props.search}\r\n                        onChange={props.handleInputChange}\r\n                        name=\"search\"\r\n                        type=\"text\"\r\n                        className=\"form-control mt-2 ml-2 customInput\"\r\n                        id=\"search\"\r\n                        placeholder=\"Search for a book!\">\r\n                    </input>\r\n                    <button onClick={props.handleFormSubmit} className=\"btn btn-primary customButton\">\r\n                        Search\r\n                        </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\n\r\nfunction ResultsContainer({books, savedBooks, saveBook,}) {        \r\n    return (\r\n        <div className=\"container card customCard\">\r\n                    <h5 className=\"bookHeading mt-1\">Results</h5>\r\n\r\n                    {books.length ? (books.map((result, index) => (\r\n                        <div className=\"card mt-2 mb-2\" key={result._id}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-2 imageStyle\">\r\n                                    <img alt={result.title} className=\"img-fluid customImage\" src={result.image} />\r\n                                </div>\r\n                                <div className=\"col-md-10\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <h5 className=\"card-title col-8\">{result.title} by {result.authors}</h5>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <p className=\"card-text\">{result.description}</p>\r\n                                        </div>\r\n                                        <div className=\"row buttonRow\">   \r\n                                        <a href={result.link} className=\"btn btn-primary col-2 customBookButton\" target=\"_blank\" rel=\"noopener noreferrer\" >More</a>\r\n                                            <button data-index={index} onClick={saveBook} className=\"btn btn-success col-2 ml-2 customBookButton\">\r\n                                                {savedBooks.map(book => book._id).includes(result._id) ? \"Saved!\" : \"Save\"}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))) : (<h2 style={{ textAlign: \"center\" }}>Search for a book!</h2>)}\r\n                </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultsContainer;","import axios from 'axios';\r\n\r\nexport default {\r\n    //Grabs a book from the Google API\r\n    getGooglebooks: function(query) {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`)\r\n    },\r\n    //Saves a book to DB\r\n    saveBook: function(bookInfo) {\r\n        return axios.post(\"/api/books\", bookInfo);\r\n    },\r\n    //Gets a book from the saved books DB\r\n    getBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    //Gets a book by its ID\r\n    getBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id)\r\n    },\r\n    //Deletes a book from the DB\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n}","import React from 'react';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport SearchForm from '../components/SearchForm';\r\nimport ResultsContainer from '../components/ResultsContainer';\r\nimport API from '../utils/API';\r\nimport './style.css';\r\n\r\nclass Search extends React.Component {\r\n\r\n    state = {\r\n        value: \"\",\r\n        books: [],\r\n        savedBooks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    getSavedBooks() {\r\n        API.getBooks()\r\n            .then(res => {\r\n                this.setState({ savedBooks: res.data })\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    createBook = bookData => {\r\n        return {\r\n            _id: bookData.id,\r\n            authors: bookData.volumeInfo.authors.join(\", \"),\r\n            description: bookData.volumeInfo.description,\r\n            image: bookData.volumeInfo.imageLinks === undefined ? \"https://i.ibb.co/c1DZG9d/unnamed.jpg\" : bookData.volumeInfo.imageLinks.thumbnail,\r\n            link: bookData.volumeInfo.previewLink,\r\n            title: bookData.volumeInfo.title,\r\n\r\n        }\r\n    }\r\n\r\n    saveBook = event => {\r\n        let index = event.target.getAttribute(\"data-index\");\r\n        let currentBook = this.state.books[index]\r\n        API.saveBook(currentBook)\r\n            .then(() => this.componentDidMount())\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    searchBook = query => {\r\n        API.getGooglebooks(query)\r\n            .then(\r\n                res => this.setState({ books: res.data.items.map(bookData => this.createBook(bookData)) }))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchBook(this.state.search)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Jumbotron />\r\n                <SearchForm\r\n                    search={this.state.search || \"\"}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n                <ResultsContainer \r\n                    books={this.state.books}\r\n                    savedBooks={this.state.savedBooks}\r\n                    searchBook={this.searchBook}\r\n                    saveBook={this.saveBook}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport './style.css'\r\n\r\nfunction SavedBooks({ books, deleteBook }) {\r\n    return (\r\n        <div className=\"container card customCard\">\r\n            <h5 className=\"bookHeading mt-1\">Saved Books</h5>\r\n\r\n            {books.length ? (books.map((result, index) => (\r\n                <div className=\"card mt-2 mb-2\" key={result._id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 imageStyle\">\r\n                            <img alt={result.title} className=\"img-fluid customImage\" src={result.image} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <h5 className=\"card-title col-8\">{result.title} by {result.authors}</h5>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <p className=\"card-text\">{result.description}</p>\r\n                                </div>\r\n                                <div className=\"row buttonRow\">                                   \r\n                                        <a href={result.link} className=\"btn btn-primary customBookButton\" target=\"_blank\" rel=\"noopener noreferrer\" >More</a>\r\n                                        <button data-index={result._id} onClick={deleteBook} className=\"btn btn-danger ml-2 customBookButton\">\r\n                                            Delete\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))) : (<h2 style={{ textAlign: \"center\" }}>Search for a book!</h2>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedBooks;","import React from 'react';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport SavedBooks from '../components/SavedBooks';\r\nimport API from '../utils/API';\r\n\r\n\r\nclass Saved extends React.Component {\r\n    \r\n    state = {\r\n        savedBooks: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    deleteBook = event =>{\r\n        let id = event.target.getAttribute(\"data-index\")\r\n        API.deleteBook(id)\r\n            .then(() => this.componentDidMount())\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    getSavedBooks() {\r\n        API.getBooks()\r\n            .then(res => {\r\n                this.setState({ savedBooks: res.data })\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <Jumbotron />\r\n            <SavedBooks \r\n                books = {this.state.savedBooks}\r\n                deleteBook = {this.deleteBook}\r\n            />\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Switch>\n        <Route exact path= \"/\" component={Search} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/saved\" component={Saved} />\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}